
name: Run tests & publish image to Dockerhub

on:
  release:
    types: [published]
    branches:
      - master
    tags:
      - "v*"

  push:
    branches:
      - master
    tags:
      - "v*"

  pull_request:
    branches:
      - master

  schedule:
    # Every day at 12:32 UTC.
    - cron: "32 12 * * *"

# If you trigger a new workflow while the previous one is running,
# this will cancel the previous one.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      # Use matrix strategy to run the tests on multiple Py versions on multiple OSs.
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install the Dependencies
        run: |
          echo "Installing the dependencies..."
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Check Linter
        run: |
          echo "Checking linter formatting..."
          make lint-check

      - name: Run Tests
        run: |
          echo "Running the tests..."
          python -m pytest -v -s

  build-push:
    # https://github.com/docker/build-push-action/blob/master/docs/advanced/test-before-push.md
    needs: ["run-tests"]
    if: github.event_name == 'release' && github.event.action == 'published'

    env:
      IMAGE: rednafi/fastapi-nano
      TEST_TAG: rednafi/fastapi-nano:latest

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Inject RELEASE_VERSION to environment variable
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    # These are prerequisites for the docker build step.
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./dockerfiles/python311/Dockerfile
        load: true
        tags: ${{ env.TEST_TAG }}

    - name: Test container
      run: |
        echo "Running container..."
        docker run -d -p 5000:5000 --expose 5000 ${{ env.TEST_TAG }}

    - name: Build and publish container image with tag
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        file: ./dockerfiles/python311/Dockerfile
        tags: |
          ${{ env.IMAGE }}:${{ steps.vars.outputs.tag }}
